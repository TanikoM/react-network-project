{"version":3,"sources":["components/Users/User.module.css","assets/img/preloader.svg","components/Navbar/Navbar.module.css","components/common/FormsControls/FormsControls.js","components/Profile/MyPosts/Post/Post.module.css","serviceWorker.js","api/api.js","redux/profile-reducer.js","redux/sidebar-reducer.js","utils/object-helpers.js","redux/users-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Navbar/Navbar.jsx","components/common/Paginator/Paginator.js","components/Users/User.js","components/Users/Users.js","components/common/Preloader/Preloader.js","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.js","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","App.js","index.js","components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","hoc/withAuthRedirect.js","assets/img/user.png","components/common/Paginator/Paginator.module.css","components/Header/Header.module.css","redux/dialogs-reducer.js"],"names":["module","exports","userPhoto","__webpack_require__","p","nav","item","activeLink","Textarea","_ref","input","meta","props","Object","C_Users_thisi_Desktop_react_way_of_samurai_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","hasError","touched","error","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","styles","formControl","assign","Input","_ref2","Boolean","window","location","hostname","match","instance","axios","create","withCredentials","baseURL","headers","API-KEY","usersApi","getUsers","currentPage","arguments","length","undefined","pageSize","get","concat","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileApi","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","Content-Type","saveProfile","profile","authApi","email","password","rememberMe","initialState","posts","id","message","likesCount","setStatus","type","getUserProfile","asyncToGenerator","regenerator_default","mark","_callee","dispatch","wrap","_context","prev","next","sent","stop","this","_x","apply","profileReducer","state","action","newPost","newPostText","objectSpread","toConsumableArray","filter","postId","photos","sidebarReducer","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","fake","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","_callee2","apiMethod","actionCreator","_context2","resultCode","_x2","_x3","_x4","_x5","usersReducer","followed","count","login","isAuth","setAuthUserData","payload","getAuthUserData","_response$data$data","_login","authReducer","initialized","appReducer","reducers","combineReducers","profilePage","dialogsPage","dialogsReducer","sidebar","usersPage","auth","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","_store_","Navbar","react_default","s","NavLink","to","activeClassName","active","Paginator","totalItemsCount","onPageChanged","_ref$portionSize","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","_useState","useState","_useState2","slicedToArray","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","cn","defineProperty","selectedPage","pageNumber","key","e","User","user","src","small","disabled","some","name","Users","objectWithoutProperties","common_Paginator_Paginator","Users_User","Preloader","preloader","createSelector","UsersContainer","_this","Fragment","common_Preloader_Preloader","components_Users_Users","React","Component","connect","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","_ref3","_callee3","_context3","bind","_x6","_ref4","_callee4","_context4","_x7","page","totalCount","Header","header","loginBlock","logout","HeaderContainer","components_Header_Header","LoginReduxForm","reduxForm","handleSubmit","onSubmit","Field","placeholder","validate","required","component","formSummaryError","messages","stopSubmit","_error","Redirect","Post","maxLength10","maxLengthCreator","MyPosts","memo","postsElements","reverse","MyPosts_Post_Post","createRef","postsBlock","AddNewPostFormRedux","values","addPost","MyPostsContainer","addPostActionCreator","ProfileStatusWithHooks","editMode","setEditMode","_useState3","_useState4","useEffect","onDoubleClick","onChange","currentTarget","value","autoFocus","onBlur","ProfileDataFormReduxForm","keys","contacts","contact","ProfileData","isOwner","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","ProfileInfo_Contact","contactTitle","contactValue","Contact","ProfileInfo","descriptionBlock","large","mainPhoto","target","files","ProfileInfo_ProfileDataForm","initialValues","ProfileInfo_ProfileData","ProfileInfo_ProfileStatusWithHooks","Profile","Profile_ProfileInfo_ProfileInfo","params","MyPosts_MyPostsContainer","ProfileContainer","authorizedUserId","refreshProfile","prevProps","prevState","snapshot","components_Profile_Profile","file","_ref5","_callee5","getState","_context5","abrupt","Promise","reject","withRouter","withAuthRedirect","DialogsContainer","lazy","App","initializeApp","Header_HeaderContainer","components_Navbar_Navbar","Route","path","render","Suspense","fallback","Profile_ProfileContainer","Users_UsersContainer","components_Login_Login","ReactDOM","BrowserRouter","basename","process","react_redux_es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","d","__webpack_exports__","maxLength","mapStateToPropsForRedirect","RedirectComponent","_React$Component","C_Users_thisi_Desktop_react_way_of_samurai_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","C_Users_thisi_Desktop_react_way_of_samurai_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_thisi_Desktop_react_way_of_samurai_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","C_Users_thisi_Desktop_react_way_of_samurai_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","C_Users_thisi_Desktop_react_way_of_samurai_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_5___default","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","dialogs","sendMessageCreator","newMessageBody","body","C_Users_thisi_Desktop_react_way_of_samurai_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","C_Users_thisi_Desktop_react_way_of_samurai_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"static/js/main.60582426.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"User_userPhoto__1kFtt\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.900ec5a6.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3qsL9\",\"item\":\"Navbar_item__2wfyE\",\"activeLink\":\"Navbar_activeLink__2WMx0\"};","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\";\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={styles.formControl}>\r\n            <div>\r\n            <textarea {...input} {...props} />\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={styles.formControl}>\r\n            <div>\r\n                <input {...input} {...props} />\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__UeAwr\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"6ff00198-f8eb-430e-ba31-f8e2935b0a64\"\r\n    }\r\n});\r\n\r\nexport const usersApi = {\r\n\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please use profileApi object.')\r\n        return profileApi.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const profileApi = {\r\n\r\n    getProfile(userId) {\r\n        return instance.get(`profile/`+ userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/`+ userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status});\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile)\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile);\r\n    }\r\n}\r\n\r\nexport const authApi = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}\r\n\r\n\r\n\r\n","import {profileApi, usersApi} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: 'Yo', likesCount: 11},\r\n        {id: 4, message: 'Dada', likesCount: 11}\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id !== action.postId)\r\n            }\r\n        }\r\n        case SAVE_PHOTO_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos }\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos})\r\n\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await usersApi.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    const response = await profileApi.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n} /*thunk*/\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    const response = await profileApi.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    const response = await profileApi.savePhoto(file);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId;\r\n    const response = await profileApi.saveProfile(profile);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId));\r\n    }\r\n    else {\r\n        dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0]}));\r\n        return Promise.reject(response.data.messages[0]);\r\n    }\r\n}\r\n\r\nexport default profileReducer;","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}","import {usersApi} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [],\r\n    fake: 10\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true} )\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false} )\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        let data = await usersApi.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersApi.follow.bind(usersApi), followSuccess);\r\n    }\r\n}\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersApi.unfollow.bind(usersApi), unfollowSuccess);\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import {authApi} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {userId, email, login, isAuth}\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authApi.me();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authApi.login(email, password, rememberMe);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n}\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authApi.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport default authReducer;","import {authApi} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    //dispatch(somethingeelse());\r\n    promise.then(() => {\r\n        dispatch(initializedSuccess());\r\n    });\r\n}\r\n\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n\r\nwindow._store_ = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>News</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Music</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Settings</a>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React, {useState} from 'react';\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return <div className={styles.paginator}>\r\n        { portionNumber > 1 &&\r\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={ cn({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber) }\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        { portionCount > portionNumber &&\r\n        <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport styles from \"./User.module.css\";\r\nimport userPhoto from \"../../assets/img/user.png\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n        <div>\r\n                <span>\r\n                    <div>\r\n                       <NavLink to={'/profile/' + user.id}>\r\n                           <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                             className={styles.userPhoto}/>\r\n                       </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {user.followed\r\n                            ? <button disabled={followingInProgress\r\n                                .some(id => id === user.id)}\r\n                                      onClick={() => { unfollow(user.id) }}>\r\n                                Unfollow</button>\r\n                            : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                      onClick={() => { follow(user.id) }}>\r\n                                Follow</button>}\r\n\r\n                    </div>\r\n                </span>\r\n            <span>\r\n                    <span>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"user.location.country\"}</div>\r\n                        <div>{\"user.location.city\"}</div>\r\n                    </span>\r\n                </span>\r\n        </div>)\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\r\n    return <div>\r\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                   totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n        <div>\r\n            {\r\n                users.map(u => <User user={u}\r\n                                     followingInProgress={props.followingInProgress}\r\n                                     key={u.id}\r\n                                     unfollow={props.unfollow}\r\n                                     follow={props.follow}\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\nexport default Users;","import React from 'react';\r\nimport preloader from \"../../../assets/img/preloader.svg\";\r\n\r\nlet Preloader = (props) => {\r\n    return <div>\r\n        <img src={preloader}/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\nexport const getUsers = createSelector( getUsersSelector,(users) => {\r\n    return users.filter(u=> true);\r\n})\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    follow,\r\n    requestUsers,\r\n    setCurrentPage,\r\n    toggleFollowingProgress,\r\n    unfollow\r\n} from \"../../redux/users-reducer\";\r\nimport Users from './Users';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.setCurrentPage(pageNumber);\r\n        this.props.getUsers(pageNumber, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   unfollow={this.props.unfollow}\r\n                   follow={this.props.follow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers\r\n})(UsersContainer);","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src='https://www.freelogodesign.org/Content/img/logo-ex-7.png'/>\r\n        <div className={s.loginBlock}>\r\n            { props.isAuth\r\n                ? <div>{props.login} <button onClick={props.logout}>Log out</button></div>\r\n                : <NavLink to={'/login'}>Login</NavLink> }\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\nexport default  connect(mapStateToProps, {logout}) (HeaderContainer);","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport styles from \"./../common/FormsControls/FormsControls.module.css\"\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field placeholder={\"Email\"} validate={[ required]}name={\"email\"} component={Input}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={\"Password\"} validate={[ required]} name={\"password\"} type={\"password\"} component={Input}/>\r\n            </div>\r\n            <div>\r\n                <Field component={Input} name={\"rememberMe\"} type={\"checkbox\"}/> remember me\r\n            </div>\r\n            {error && <div className={styles.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <button>Submit</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://movies4maniacs.liberty.me/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg' />\r\n        { props.message }\r\n          <div>\r\n        <span>like</span> { props.likesCount }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = React.memo((props) => {\r\n    let postsElements =\r\n        [...props.posts]\r\n            .reverse()\r\n            .map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name={\"newPostText\"} validate={[required, maxLength10]}\r\n                       placeholder={\"Post message\"}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm)\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        newPostText: state.profilePage.newPostText,\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect (mapStateToProps, mapDispatchToProps) (MyPosts);\r\n\r\nexport default MyPostsContainer;","import React, {useState, useEffect} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n   let [editMode, setEditMode] = useState(false);\r\n   let [status, setStatus] = useState(props.status);\r\n\r\n   useEffect(() => {\r\n       setStatus(props.status);\r\n   }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n            <div>\r\n                <b>Status</b>: <span onDoubleClick={activateEditMode}>{props.status || \"-----\"}</span>\r\n            </div>\r\n            }\r\n            { editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport styles from \"../../common/FormsControls/FormsControls.module.css\";\r\n\r\n\r\nconst ProfileDataForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div><button>save</button></div>\r\n        {props.error && <div className={styles.formSummaryError}>\r\n            {props.error}\r\n        </div>}\r\n        <div>\r\n            <b>Full Name</b>: <Field placeholder={\"Full Name\"} name={\"fullName\"} component={Input}/>\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: <Field name={\"lookingForAJob\"} component={Input} type={\"checkbox\"}/>\r\n        </div>\r\n        <div>\r\n            <b>My professional skills</b>:\r\n            <Field placeholder={\"My professional skills\"} name={\"lookingForAJobDescription\"} component={Textarea}/>\r\n        </div>\r\n        <div>\r\n            <b>About me</b>:\r\n            <Field placeholder={\"About me\"} name={\"aboutMe\"} component={Textarea}/>\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(props.profile.contacts).map(key => {\r\n            return <div key={key} className={s.contact}>\r\n                <b>{key}: <Field placeholder={key} name={\"contacts.\" + key} component={Input}/> </b>\r\n            </div>\r\n        })}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm);\r\n\r\nexport default ProfileDataFormReduxForm;","import React, {useState}from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/img/user.png\"\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        props.saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        );\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={props.profile.photos.large || userPhoto} className={s.mainPhoto}/>\r\n                {props.isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n                {editMode\r\n                    ? <ProfileDataForm initialValues={props.profile} profile={props.profile} onSubmit={onSubmit}/>\r\n                    : <ProfileData goToEditMode={() => {setEditMode(true)}} profile={props.profile} isOwner={props.isOwner}/>}\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = (props) => {\r\n    return <div>\r\n        {props.isOwner && <div><button onClick={props.goToEditMode}>edit</button></div>}\r\n        <div>\r\n            <b>Full Name</b>: {props.profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {props.profile.lookingForAJob ? \"yes\" : \"no\"}\r\n        </div>\r\n        {props.profile.lookingForAJob &&\r\n        <div>\r\n            <b>My professional skills</b>: {props.profile.lookingForAJobDescription}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b>About me</b>: {props.profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(props.profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={props.profile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\n\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo\r\n                savePhoto={props.savePhoto}\r\n                isOwner={!props.match.params.userId}\r\n                profile={props.profile}\r\n                status={props.status}\r\n                saveProfile={props.saveProfile}\r\n                updateStatus={props.updateStatus} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     savePhoto={this.props.savePhoto}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto,  saveProfile}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)\r\n(ProfileContainer);\r\n","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport {Route, withRouter} from \"react-router-dom\";\n\nimport UsersContainer from \"./components/Users/UsersContainer\";\n\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\n\n//import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\n\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    <Route path='/dialogs'\n                           render={() => {\n                               return <React.Suspense fallback={<h1>Loading...</h1>}>\n                                   <DialogsContainer/>\n                               </React.Suspense>\n                           }}/>\n\n                    <Route path='/profile/:userId?'\n                           render={() => <ProfileContainer/>}/>\n                    <Route path='/users'\n                           render={() => <UsersContainer/>}/>\n                    <Route path='/login'\n                           render={() => <Login/>}/>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nconst mapStateToProps = (state) => ({\ninitialized: state.app.initialized\n})\n\nexport default compose(\nwithRouter,\nconnect(mapStateToProps, {initializeApp})) (App);","import * as serviceWorker from './serviceWorker';\nimport store from \"./redux/redux-store\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>, document.getElementById('root'));\n\n\n// API\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__12YM9\",\"formSummaryError\":\"FormsControls_formSummaryError__2-lc_\"};","\r\nexport const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbol`;\r\n\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3IBkM\",\"mainPhoto\":\"ProfileInfo_mainPhoto__1BQ2k\",\"contact\":\"ProfileInfo_contact__1XOVV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2vMNa\",\"posts\":\"MyPosts_posts__lLMwQ\"};","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"} />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","module.exports = __webpack_public_path__ + \"static/media/user.08e6ccaf.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__2qQqh\",\"pageNumber\":\"Paginator_pageNumber__tyUqv\",\"selectedPage\":\"Paginator_selectedPage__1YQU7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__25WrR\",\"loginBlock\":\"Header_loginBlock__1qLnk\"};","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrew'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Viktor'},\r\n        {id: 6, name: 'Valera'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your it-kamasutra?'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\nexport default dialogsReducer;"],"sourceRoot":""}