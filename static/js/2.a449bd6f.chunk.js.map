{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","_React$Component","Object","C_Users_thisi_Desktop_react_way_of_samurai_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_thisi_Desktop_react_way_of_samurai_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_thisi_Desktop_react_way_of_samurai_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","arguments","C_Users_thisi_Desktop_react_way_of_samurai_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","C_Users_thisi_Desktop_react_way_of_samurai_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","props","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","to","React","connect","module","exports","descriptionBlock","postsBlock","posts","item","Post","react_default","className","s","src","message","likesCount","maxLength10","maxLengthCreator","MyPosts","memo","console","log","postsElements","map","p","MyPosts_Post_Post","createRef","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","component","Textarea","name","validate","required","placeholder","MyPostsContainer","profilePage","dispatch","addPostActionCreator","ProfileStatusWithHooks","_useState","useState","_useState2","slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","ProfileInfo","profile","photos","large","ProfileInfo_ProfileStatusWithHooks","Preloader","Profile","Profile_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","ProfileContainer","userId","match","params","authorizedUserId","getUserProfile","getStatus","components_Profile_Profile","assign","compose","withRouter"],"mappings":"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","file":"static/js/2.a449bd6f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"} />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3IBkM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2vMNa\",\"posts\":\"MyPosts_posts__lLMwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__UeAwr\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://movies4maniacs.liberty.me/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg' />\r\n        { props.message }\r\n          <div>\r\n        <span>like</span> { props.likesCount }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = React.memo((props) => {\r\n    console.log(\"render\");\r\n    let postsElements =\r\n        props.posts.map(p => <Post message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component ={Textarea} name={\"newPostText\"} validate={[ required, maxLength10]} placeholder={\"Post message\"}/>\r\n            </div>\r\n            <div>\r\n                <button >Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({form:\"ProfileAddNewPostForm\"}) (AddNewPostForm)\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        newPostText: state.profilePage.newPostText,\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect (mapStateToProps, mapDispatchToProps) (MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n           status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={this.activateEditMode}>{this.props.status || \"-----\"}</span>\r\n                </div>\r\n                }\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.status}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React, {useState, useEffect} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n   let [editMode, setEditMode] = useState(false);\r\n   let [status, setStatus] = useState(props.status);\r\n\r\n   useEffect(() => {\r\n       setStatus(props.status);\r\n   }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || \"-----\"}</span>\r\n            </div>\r\n            }\r\n            { editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={props.profile.photos.large}/>\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\n\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)\r\n(ProfileContainer);\r\n"],"sourceRoot":""}