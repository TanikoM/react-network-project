{"version":3,"sources":["components/Users/User.module.css","assets/img/preloader.svg","components/Navbar/Navbar.module.css","components/Profile/MyPosts/Post/Post.module.css","serviceWorker.js","api/api.js","redux/profile-reducer.js","redux/sidebar-reducer.js","utils/object-helpers.js","redux/users-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Navbar/Navbar.jsx","components/common/Paginator/Paginator.js","components/Users/User.js","components/Users/Users.js","components/common/Preloader/Preloader.js","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","App.js","index.js","components/common/FormsControls/FormsControls.js","utils/validators/validators.js","components/common/FormsControls/FormsControls.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","hoc/withAuthRedirect.js","assets/img/user.png","components/common/Paginator/Paginator.module.css","components/Header/Header.module.css","redux/dialogs-reducer.js"],"names":["module","exports","userPhoto","__webpack_require__","p","nav","item","activeLink","Boolean","window","location","hostname","match","instance","axios","create","withCredentials","baseURL","headers","API-KEY","usersApi","getUsers","currentPage","arguments","length","undefined","pageSize","get","concat","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileApi","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","Content-Type","authApi","email","password","rememberMe","initialState","posts","id","message","likesCount","profile","setStatus","type","profileReducer","state","action","newPost","newPostText","Object","objectSpread","toConsumableArray","filter","postId","photos","sidebarReducer","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","fake","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee2","dispatch","apiMethod","actionCreator","wrap","_context2","prev","next","sent","resultCode","stop","this","_x2","_x3","_x4","_x5","apply","usersReducer","followed","count","login","isAuth","setAuthUserData","payload","getAuthUserData","_ref","_callee","_response$data$data","_login","_context","_x","authReducer","initialized","appReducer","reducers","combineReducers","profilePage","dialogsPage","dialogsReducer","sidebar","usersPage","auth","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","_store_","Navbar","react_default","createElement","className","s","NavLink","to","activeClassName","active","Paginator","totalItemsCount","onPageChanged","_ref$portionSize","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","_useState","useState","_useState2","slicedToArray","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","onClick","cn","defineProperty","selectedPage","pageNumber","key","e","User","user","src","small","disabled","some","name","Users","props","objectWithoutProperties","common_Paginator_Paginator","Users_User","Preloader","preloader","createSelector","UsersContainer","_this","Fragment","common_Preloader_Preloader","components_Users_Users","React","Component","connect","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","_ref3","_callee3","_context3","bind","_x6","_ref4","_callee4","_context4","_x7","page","totalCount","Header","header","loginBlock","logout","HeaderContainer","components_Header_Header","LoginReduxForm","reduxForm","handleSubmit","error","onSubmit","Field","placeholder","validate","required","component","Input","formSummaryError","messages","stopSubmit","_error","Redirect","Post","maxLength10","maxLengthCreator","MyPosts","memo","log","postsElements","MyPosts_Post_Post","createRef","postsBlock","AddNewPostFormRedux","values","addPost","Textarea","MyPostsContainer","addPostActionCreator","ProfileStatusWithHooks","editMode","setEditMode","_useState3","_useState4","useEffect","onDoubleClick","onChange","currentTarget","value","autoFocus","onBlur","ProfileInfo","descriptionBlock","large","mainPhoto","isOwner","target","files","ProfileInfo_ProfileStatusWithHooks","Profile","Profile_ProfileInfo_ProfileInfo","params","MyPosts_MyPostsContainer","ProfileContainer","authorizedUserId","getUserProfile","refreshProfile","prevProps","prevState","snapshot","components_Profile_Profile","assign","file","withRouter","withAuthRedirect","DialogsContainer","lazy","App","initializeApp","Header_HeaderContainer","components_Navbar_Navbar","Route","path","render","Suspense","fallback","Profile_ProfileContainer","Users_UsersContainer","components_Login_Login","ReactDOM","BrowserRouter","basename","process","react_redux_es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","input","meta","C_Users_thisi_Desktop_react_way_of_samurai_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","hasError","touched","react__WEBPACK_IMPORTED_MODULE_1___default","formControl","d","__webpack_exports__","maxLength","mapStateToPropsForRedirect","RedirectComponent","_React$Component","C_Users_thisi_Desktop_react_way_of_samurai_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","C_Users_thisi_Desktop_react_way_of_samurai_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_thisi_Desktop_react_way_of_samurai_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","C_Users_thisi_Desktop_react_way_of_samurai_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","C_Users_thisi_Desktop_react_way_of_samurai_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_5___default","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","dialogs","sendMessageCreator","newMessageBody","body","C_Users_thisi_Desktop_react_way_of_samurai_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","C_Users_thisi_Desktop_react_way_of_samurai_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"static/js/main.c44025cb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"User_userPhoto__1kFtt\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.900ec5a6.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3qsL9\",\"item\":\"Navbar_item__2wfyE\",\"activeLink\":\"Navbar_activeLink__2WMx0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__UeAwr\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"6ff00198-f8eb-430e-ba31-f8e2935b0a64\"\r\n    }\r\n});\r\n\r\nexport const usersApi = {\r\n\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please use profileApi object.')\r\n        return profileApi.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const profileApi = {\r\n\r\n    getProfile(userId) {\r\n        return instance.get(`profile/`+ userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/`+ userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status});\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile)\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport const authApi = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}\r\n\r\n\r\n\r\n","import {profileApi, usersApi} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: 'Blabla', likesCount: 11},\r\n        {id: 4, message: 'Dada', likesCount: 11}\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id != action.postId)\r\n            }\r\n        }\r\n        case SAVE_PHOTO_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos }\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos})\r\n\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await usersApi.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    const response = await profileApi.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n} /*thunk*/\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    const response = await profileApi.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    const response = await profileApi.savePhoto(file);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\n\r\nexport default profileReducer;","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}","import {usersApi} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [],\r\n    fake: 10\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true} )\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false} )\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        let data = await usersApi.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersApi.follow.bind(usersApi), followSuccess);\r\n    }\r\n}\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersApi.unfollow.bind(usersApi), unfollowSuccess);\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import {authApi} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {userId, email, login, isAuth}\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authApi.me();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authApi.login(email, password, rememberMe);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n}\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authApi.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport default authReducer;","import {authApi} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    //dispatch(somethingeelse());\r\n    promise.then(() => {\r\n        dispatch(initializedSuccess());\r\n    });\r\n}\r\n\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n\r\nwindow._store_ = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>News</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Music</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Settings</a>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React, {useState} from 'react';\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return <div className={styles.paginator}>\r\n        { portionNumber > 1 &&\r\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={ cn({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber) }\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        { portionCount > portionNumber &&\r\n        <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport styles from \"./User.module.css\";\r\nimport userPhoto from \"../../assets/img/user.png\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n        <div>\r\n                <span>\r\n                    <div>\r\n                       <NavLink to={'/profile/' + user.id}>\r\n                           <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                             className={styles.userPhoto}/>\r\n                       </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {user.followed\r\n                            ? <button disabled={followingInProgress\r\n                                .some(id => id === user.id)}\r\n                                      onClick={() => { unfollow(user.id) }}>\r\n                                Unfollow</button>\r\n                            : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                      onClick={() => { follow(user.id) }}>\r\n                                Follow</button>}\r\n\r\n                    </div>\r\n                </span>\r\n            <span>\r\n                    <span>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"user.location.country\"}</div>\r\n                        <div>{\"user.location.city\"}</div>\r\n                    </span>\r\n                </span>\r\n        </div>)\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\r\n    return <div>\r\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                   totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n        <div>\r\n            {\r\n                users.map(u => <User user={u}\r\n                                     followingInProgress={props.followingInProgress}\r\n                                     key={u.id}\r\n                                     unfollow={props.unfollow}\r\n                                     follow={props.follow}\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\nexport default Users;","import React from 'react';\r\nimport preloader from \"../../../assets/img/preloader.svg\";\r\n\r\nlet Preloader = (props) => {\r\n    return <div>\r\n        <img src={preloader}/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\nexport const getUsers = createSelector( getUsersSelector,(users) => {\r\n    return users.filter(u=> true);\r\n})\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    follow,\r\n    requestUsers,\r\n    setCurrentPage,\r\n    toggleFollowingProgress,\r\n    unfollow\r\n} from \"../../redux/users-reducer\";\r\nimport Users from './Users';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.setCurrentPage(pageNumber);\r\n        this.props.getUsers(pageNumber, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   unfollow={this.props.unfollow}\r\n                   follow={this.props.follow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers\r\n})(UsersContainer);","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src='https://www.freelogodesign.org/Content/img/logo-ex-7.png'/>\r\n        <div className={s.loginBlock}>\r\n            { props.isAuth\r\n                ? <div>{props.login} <button onClick={props.logout}>Log out</button></div>\r\n                : <NavLink to={'/login'}>Login</NavLink> }\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\nexport default  connect(mapStateToProps, {logout}) (HeaderContainer);","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport styles from \"./../common/FormsControls/FormsControls.module.css\"\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field placeholder={\"Email\"} validate={[ required]}name={\"email\"} component={Input}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={\"Password\"} validate={[ required]} name={\"password\"} type={\"password\"} component={Input}/>\r\n            </div>\r\n            <div>\r\n                <Field component={Input} name={\"rememberMe\"} type={\"checkbox\"}/> remember me\r\n            </div>\r\n            {error && <div className={styles.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <button>Submit</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://movies4maniacs.liberty.me/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg' />\r\n        { props.message }\r\n          <div>\r\n        <span>like</span> { props.likesCount }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = React.memo((props) => {\r\n    console.log(\"render\");\r\n    let postsElements =\r\n        props.posts.map(p => <Post message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component ={Textarea} name={\"newPostText\"} validate={[ required, maxLength10]} placeholder={\"Post message\"}/>\r\n            </div>\r\n            <div>\r\n                <button >Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({form:\"ProfileAddNewPostForm\"}) (AddNewPostForm)\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        newPostText: state.profilePage.newPostText,\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect (mapStateToProps, mapDispatchToProps) (MyPosts);\r\n\r\nexport default MyPostsContainer;","import React, {useState, useEffect} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n   let [editMode, setEditMode] = useState(false);\r\n   let [status, setStatus] = useState(props.status);\r\n\r\n   useEffect(() => {\r\n       setStatus(props.status);\r\n   }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || \"-----\"}</span>\r\n            </div>\r\n            }\r\n            { editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/img/user.png\"\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={props.profile.photos.large || userPhoto} className={s.mainPhoto}/>\r\n                {props.isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\n\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo\r\n                savePhoto={props.savePhoto}\r\n                isOwner={!props.match.params.userId}\r\n                profile={props.profile}\r\n                status={props.status}\r\n                updateStatus={props.updateStatus} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     savePhoto={this.props.savePhoto}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)\r\n(ProfileContainer);\r\n","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport {Route, withRouter} from \"react-router-dom\";\n\nimport UsersContainer from \"./components/Users/UsersContainer\";\n\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\n\n//import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\n\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    <Route path='/dialogs'\n                           render={() => {\n                               return <React.Suspense fallback={<h1>Loading...</h1>}>\n                                   <DialogsContainer/>\n                               </React.Suspense>\n                           }}/>\n\n                    <Route path='/profile/:userId?'\n                           render={() => <ProfileContainer/>}/>\n                    <Route path='/users'\n                           render={() => <UsersContainer/>}/>\n                    <Route path='/login'\n                           render={() => <Login/>}/>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nconst mapStateToProps = (state) => ({\ninitialized: state.app.initialized\n})\n\nexport default compose(\nwithRouter,\nconnect(mapStateToProps, {initializeApp})) (App);","import * as serviceWorker from './serviceWorker';\nimport store from \"./redux/redux-store\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>, document.getElementById('root'));\n\n\n// API\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\";\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={styles.formControl}>\r\n            <div>\r\n            <textarea {...input} {...props} />\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={styles.formControl}>\r\n            <div>\r\n                <input {...input} {...props} />\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}","\r\nexport const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbol`;\r\n\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__12YM9\",\"formSummaryError\":\"FormsControls_formSummaryError__2-lc_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2vMNa\",\"posts\":\"MyPosts_posts__lLMwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3IBkM\",\"mainPhoto\":\"ProfileInfo_mainPhoto__1BQ2k\"};","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"} />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","module.exports = __webpack_public_path__ + \"static/media/user.08e6ccaf.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__2qQqh\",\"pageNumber\":\"Paginator_pageNumber__tyUqv\",\"selectedPage\":\"Paginator_selectedPage__1YQU7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__25WrR\",\"loginBlock\":\"Header_loginBlock__1qLnk\"};","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrew'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Viktor'},\r\n        {id: 6, name: 'Valera'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your it-kamasutra?'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\nexport default dialogsReducer;"],"sourceRoot":""}